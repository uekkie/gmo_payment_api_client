=begin
#PGマルチペイメントサービス OpenAPIタイプ

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.3.1

Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'cgi'

module GmoPaymentApiClient
  class MemberApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # ID登録
    # 会員を登録するためのAPIです。 
    # @param member_create_request [MemberCreateRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [MemberCreateResponse]
    def member_create(member_create_request, opts = {})
      data, _status_code, _headers = member_create_with_http_info(member_create_request, opts)
      data
    end

    # ID登録
    # 会員を登録するためのAPIです。 
    # @param member_create_request [MemberCreateRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [Array<(MemberCreateResponse, Integer, Hash)>] MemberCreateResponse data, response status code and response headers
    def member_create_with_http_info(member_create_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MemberApi.member_create ...'
      end
      # verify the required parameter 'member_create_request' is set
      if @api_client.config.client_side_validation && member_create_request.nil?
        fail ArgumentError, "Missing the required parameter 'member_create_request' when calling MemberApi.member_create"
      end
      if @api_client.config.client_side_validation && !opts[:'idempotency_key'].nil? && opts[:'idempotency_key'].to_s.length > 36
        fail ArgumentError, 'invalid value for "opts[:"idempotency_key"]" when calling MemberApi.member_create, the character length must be smaller than or equal to 36.'
      end

      # resource path
      local_var_path = '/member/create'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Idempotency-Key'] = opts[:'idempotency_key'] if !opts[:'idempotency_key'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(member_create_request)

      # return_type
      return_type = opts[:debug_return_type] || 'MemberCreateResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'Password']

      new_options = opts.merge(
        :operation => :"MemberApi.member_create",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MemberApi#member_create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 全削除
    # 会員情報を削除するためのAPIです。   Pay払いの認証情報も含まれます。   一度削除した会員ID、認証情報は二度と利用できないため、ご注意ください。 
    # @param member_delete_request [MemberDeleteRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [MemberDeleteResponse]
    def member_delete(member_delete_request, opts = {})
      data, _status_code, _headers = member_delete_with_http_info(member_delete_request, opts)
      data
    end

    # 全削除
    # 会員情報を削除するためのAPIです。   Pay払いの認証情報も含まれます。   一度削除した会員ID、認証情報は二度と利用できないため、ご注意ください。 
    # @param member_delete_request [MemberDeleteRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [Array<(MemberDeleteResponse, Integer, Hash)>] MemberDeleteResponse data, response status code and response headers
    def member_delete_with_http_info(member_delete_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MemberApi.member_delete ...'
      end
      # verify the required parameter 'member_delete_request' is set
      if @api_client.config.client_side_validation && member_delete_request.nil?
        fail ArgumentError, "Missing the required parameter 'member_delete_request' when calling MemberApi.member_delete"
      end
      if @api_client.config.client_side_validation && !opts[:'idempotency_key'].nil? && opts[:'idempotency_key'].to_s.length > 36
        fail ArgumentError, 'invalid value for "opts[:"idempotency_key"]" when calling MemberApi.member_delete, the character length must be smaller than or equal to 36.'
      end

      # resource path
      local_var_path = '/member/delete'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Idempotency-Key'] = opts[:'idempotency_key'] if !opts[:'idempotency_key'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(member_delete_request)

      # return_type
      return_type = opts[:debug_return_type] || 'MemberDeleteResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'Password']

      new_options = opts.merge(
        :operation => :"MemberApi.member_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MemberApi#member_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 認証情報削除
    # 会員に登録されている情報を削除するためのAPIです。   楽天ペイ(オンライン決済)V2ではご利用いただけません。 
    # @param member_delete_item_request [MemberDeleteItemRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [MemberDeleteItem201Response]
    def member_delete_item(member_delete_item_request, opts = {})
      data, _status_code, _headers = member_delete_item_with_http_info(member_delete_item_request, opts)
      data
    end

    # 認証情報削除
    # 会員に登録されている情報を削除するためのAPIです。   楽天ペイ(オンライン決済)V2ではご利用いただけません。 
    # @param member_delete_item_request [MemberDeleteItemRequest] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :idempotency_key 冪等キー   UUIDv4に則った書式でリクエスト毎にユニークとなる最大36桁の値。   詳細は[冪等処理](#tag/idempotence)を参照ください。 
    # @return [Array<(MemberDeleteItem201Response, Integer, Hash)>] MemberDeleteItem201Response data, response status code and response headers
    def member_delete_item_with_http_info(member_delete_item_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MemberApi.member_delete_item ...'
      end
      # verify the required parameter 'member_delete_item_request' is set
      if @api_client.config.client_side_validation && member_delete_item_request.nil?
        fail ArgumentError, "Missing the required parameter 'member_delete_item_request' when calling MemberApi.member_delete_item"
      end
      if @api_client.config.client_side_validation && !opts[:'idempotency_key'].nil? && opts[:'idempotency_key'].to_s.length > 36
        fail ArgumentError, 'invalid value for "opts[:"idempotency_key"]" when calling MemberApi.member_delete_item, the character length must be smaller than or equal to 36.'
      end

      # resource path
      local_var_path = '/member/deleteItem'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Idempotency-Key'] = opts[:'idempotency_key'] if !opts[:'idempotency_key'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(member_delete_item_request)

      # return_type
      return_type = opts[:debug_return_type] || 'MemberDeleteItem201Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'Password']

      new_options = opts.merge(
        :operation => :"MemberApi.member_delete_item",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MemberApi#member_delete_item\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 照会
    # 会員情報を照会するためのAPIです。 
    # @param member_inquiry_request [MemberInquiryRequest] 
    # @param [Hash] opts the optional parameters
    # @return [MemberInquiryResponse]
    def member_inquiry(member_inquiry_request, opts = {})
      data, _status_code, _headers = member_inquiry_with_http_info(member_inquiry_request, opts)
      data
    end

    # 照会
    # 会員情報を照会するためのAPIです。 
    # @param member_inquiry_request [MemberInquiryRequest] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(MemberInquiryResponse, Integer, Hash)>] MemberInquiryResponse data, response status code and response headers
    def member_inquiry_with_http_info(member_inquiry_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MemberApi.member_inquiry ...'
      end
      # verify the required parameter 'member_inquiry_request' is set
      if @api_client.config.client_side_validation && member_inquiry_request.nil?
        fail ArgumentError, "Missing the required parameter 'member_inquiry_request' when calling MemberApi.member_inquiry"
      end
      # resource path
      local_var_path = '/member/inquiry'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/problem+json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(member_inquiry_request)

      # return_type
      return_type = opts[:debug_return_type] || 'MemberInquiryResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'Password']

      new_options = opts.merge(
        :operation => :"MemberApi.member_inquiry",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MemberApi#member_inquiry\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
